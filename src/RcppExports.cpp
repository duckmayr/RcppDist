// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/RcppDist.h"
#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// test_d4beta
List test_d4beta(NumericVector x, double shape1, double shape2, double a, double b);
RcppExport SEXP _RcppDist_test_d4beta(SEXP xSEXP, SEXP shape1SEXP, SEXP shape2SEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type shape1(shape1SEXP);
    Rcpp::traits::input_parameter< double >::type shape2(shape2SEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(test_d4beta(x, shape1, shape2, a, b));
    return rcpp_result_gen;
END_RCPP
}
// test_p4beta
List test_p4beta(NumericVector x, double shape1, double shape2, double a, double b);
RcppExport SEXP _RcppDist_test_p4beta(SEXP xSEXP, SEXP shape1SEXP, SEXP shape2SEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type shape1(shape1SEXP);
    Rcpp::traits::input_parameter< double >::type shape2(shape2SEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(test_p4beta(x, shape1, shape2, a, b));
    return rcpp_result_gen;
END_RCPP
}
// test_q4beta_nolog
List test_q4beta_nolog(NumericVector x, double shape1, double shape2, double a, double b);
RcppExport SEXP _RcppDist_test_q4beta_nolog(SEXP xSEXP, SEXP shape1SEXP, SEXP shape2SEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type shape1(shape1SEXP);
    Rcpp::traits::input_parameter< double >::type shape2(shape2SEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(test_q4beta_nolog(x, shape1, shape2, a, b));
    return rcpp_result_gen;
END_RCPP
}
// test_q4beta_log
List test_q4beta_log(NumericVector x, double shape1, double shape2, double a, double b);
RcppExport SEXP _RcppDist_test_q4beta_log(SEXP xSEXP, SEXP shape1SEXP, SEXP shape2SEXP, SEXP aSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type shape1(shape1SEXP);
    Rcpp::traits::input_parameter< double >::type shape2(shape2SEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< double >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(test_q4beta_log(x, shape1, shape2, a, b));
    return rcpp_result_gen;
END_RCPP
}
// test_dlst
List test_dlst(NumericVector x, double df, double mu, double sigma);
RcppExport SEXP _RcppDist_test_dlst(SEXP xSEXP, SEXP dfSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type df(dfSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(test_dlst(x, df, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// test_plst
List test_plst(NumericVector x, double df, double mu, double sigma);
RcppExport SEXP _RcppDist_test_plst(SEXP xSEXP, SEXP dfSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type df(dfSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(test_plst(x, df, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// test_qlst_nolog
List test_qlst_nolog(NumericVector x, double df, double mu, double sigma);
RcppExport SEXP _RcppDist_test_qlst_nolog(SEXP xSEXP, SEXP dfSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type df(dfSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(test_qlst_nolog(x, df, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}
// test_qlst_log
List test_qlst_log(NumericVector x, double df, double mu, double sigma);
RcppExport SEXP _RcppDist_test_qlst_log(SEXP xSEXP, SEXP dfSEXP, SEXP muSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type df(dfSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type sigma(sigmaSEXP);
    rcpp_result_gen = Rcpp::wrap(test_qlst_log(x, df, mu, sigma));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RcppDist_test_d4beta", (DL_FUNC) &_RcppDist_test_d4beta, 5},
    {"_RcppDist_test_p4beta", (DL_FUNC) &_RcppDist_test_p4beta, 5},
    {"_RcppDist_test_q4beta_nolog", (DL_FUNC) &_RcppDist_test_q4beta_nolog, 5},
    {"_RcppDist_test_q4beta_log", (DL_FUNC) &_RcppDist_test_q4beta_log, 5},
    {"_RcppDist_test_dlst", (DL_FUNC) &_RcppDist_test_dlst, 4},
    {"_RcppDist_test_plst", (DL_FUNC) &_RcppDist_test_plst, 4},
    {"_RcppDist_test_qlst_nolog", (DL_FUNC) &_RcppDist_test_qlst_nolog, 4},
    {"_RcppDist_test_qlst_log", (DL_FUNC) &_RcppDist_test_qlst_log, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_RcppDist(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
